#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "platform.h"
#include "microblaze_sleep.h"
#include "xparameters.h"
#include "xgpio.h"

#define size  128

void print(char *str);
//char inbyte(void);
//void outbyte(char c);

//declare an XGpio and XGpio instance
XGpio GPIO_0;
XGpio_Config GPIO_0_conf;

int comp(const void * elem1, const void * elem2)
{	int f = *((unsigned int*) elem1);
	int s = *((unsigned int*) elem2);
	if (f < s)	return 1;
	if (f > s)	return -1;
	return 0;
}


int main()
{
	int i;
	//char c2,c1,c0;
	unsigned int value=0;
	unsigned int input;
	char *s = "000";

	unsigned int my_array[] =
	{	998,999,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,		// 0 	- 	35
		36,37,38,39,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,		// 36 	- 	68
		11,10,999,888,777,666,555,444,333,222,111,133,292,339,499,999,677,781,891,98,109,114,127,139,396,777,	// 69 	- 	94
		926,471,911,491,913,163,626,581,591,333,421,345,555,888,272,312,326,334,734,435,836,937,238,239,240,	// 95 	- 	119
		121,59,199,27,98,99,10,99,92,159,163,114,177,101,44,55,192,58,81,129,193,124,76,38,181,147,182,77,71,	// 120 	- 	148
		17,164,149,193,62,45,81,176,184,165,28,199,1,199,1,199,1,199,1,199,1,199,1,199,15,12,9,98,9,134,14,15,	// 149 	- 	180
		16,7,2,6,1,4,7,18,1,5,20,21,22,23,24,25,15,15,15,101,199,102,198,103,197,104,196,105,195,111,189,122,	// 181 	- 	212
		184,137,136,135,134,144,141,190,120,170,60,70,30,50,111,981,141,171,121,66,193,118,125,173,176,180,		// 213 	- 	238
		169,187,165,181,101,577,153,159,679,144,155,799,177,139,152,799,179};									// 239 	- 	255

		GPIO_0_conf.BaseAddress = XPAR_AXI_GPIO_0_BASEADDR;
	    GPIO_0_conf.DeviceId = XPAR_GPIO_0_DEVICE_ID;
	    //GPIO_0_conf.InterruptPresent = XPAR_GPIO_0_INTERRUPT_PRESENT;
	    GPIO_0_conf.IsDual = XPAR_GPIO_0_IS_DUAL;

	    //Initialize the XGpio instance
        XGpio_CfgInitialize(&GPIO_0, &GPIO_0_conf, GPIO_0_conf.BaseAddress);

    init_platform();
    print("Example of interactions with Nexys-4 switches and leds\n\r");

    for(i=0;i<size;i++)
    {
    	value = 0xc0000000 | (i<<16) |  my_array[i];
    	XGpio_DiscreteWrite(&GPIO_0, 1, value);
    }
    value = 0;//0x40000000;
    XGpio_DiscreteWrite(&GPIO_0, 1, value);
    MB_Sleep(1000);
    for(i=0; i<size; i++)
    {
//    	s[2] = (char)(i%10+0x30);
//    	s[1] = (char)((i/10)%10+0x30);
//    	s[0] = (char)(i/100+0x30);
//    	print("address = "); print(s);
    	XGpio_DiscreteWrite(&GPIO_0, 1, (i<<16) & 0x00000F00);
    	input = XGpio_DiscreteRead(&GPIO_0, 2);
    	//qsort(my_array,16,4,comp);
    	s[2] = (char)((input%10)+0x30);
    	s[1] = (char)(((input/10)%10)+0x30);
    	s[0] = (char)(input/100+0x30);
    	print("data = "); print(s);
//    	outbyte((char)((input/100)+0x30));
//    	outbyte((char)((input/10)%10+0x30));
//    	outbyte((char)(input%10+0x30));
    	print("\n");
    	//MB_Sleep(1000);
    }

    print("The program has been terminated\n\r");
    cleanup_platform();
    return 0;
}
