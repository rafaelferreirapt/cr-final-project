#include "platform.h"
#include "xparameters.h"
#include "xgpio.h"


void printCharArrayU32(u32 n, int base)
{
	char number[32] = {0};
	int number_i = 31;

	while(n!=0){
		if(n / base == 0 && n % base == 0){
			break;
		}

		int res = n % base;

		if(res >= 0 && res <= 9){
			number[number_i] = (res + '0');
		}else if(res > 9 && res <= 15){
			number[number_i] = (res - 10 + 'A');
		}

		number_i = number_i - 1;
		n = n / base;
	}

	int j = number_i+1;

	// print with outbyte

	if(base==16){
		outbyte('0');
		outbyte('x');
	}

	for(; j<32; j++){
		outbyte(number[j]);
	}

	print("\n");
}
int main()
{
    init_platform();
    print("\nInit\n\r");
    u32 input;
    u32 m,n = 0x0;

	input = XGpio_DiscreteRead(&GPIO_0, 2);
    m = 0x000000FF & input;
    n = (0x0000FF00 & input) >> 8;

    printCharArrayU32(m, 16);
    printCharArrayU32(n, 16);



    print("\nThe program has been terminated\n\r");
    cleanup_platform();
    return 0;
}
